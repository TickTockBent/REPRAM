version: '3.8'

services:
  # For local testing, we need to simulate the Flux environment where
  # all containers share the same external IP but have different ports
  
  # This approach uses host networking mode to share the same network namespace
  # Similar to how Flux would expose multiple ports on the same domain
  
  node-1:
    build:
      context: ..
      dockerfile: Dockerfile
      target: cluster-node
    container_name: repram-auto-1
    environment:
      - REPRAM_NODE_ID=auto-node-1
      - NODE_ADDRESS=localhost
      - USE_AUTO_DISCOVERY=true
      - DISCOVERY_DOMAIN=localhost  # All nodes share localhost
      - BASE_PORT=8081
      - MAX_PORTS=5
      - REPLICATION_FACTOR=3
    network_mode: host  # Share host network - simulates Flux behavior
    volumes:
      - /tmp/repram-auto-1:/tmp/repram

  node-2:
    build:
      context: ..
      dockerfile: Dockerfile
      target: cluster-node
    container_name: repram-auto-2
    environment:
      - REPRAM_NODE_ID=auto-node-2
      - NODE_ADDRESS=localhost
      - USE_AUTO_DISCOVERY=true
      - DISCOVERY_DOMAIN=localhost
      - BASE_PORT=8081
      - MAX_PORTS=5
      - REPLICATION_FACTOR=3
    network_mode: host
    volumes:
      - /tmp/repram-auto-2:/tmp/repram
    depends_on:
      - node-1
    command: sh -c "sleep 2 && ./repram-cluster-node"

  node-3:
    build:
      context: ..
      dockerfile: Dockerfile
      target: cluster-node
    container_name: repram-auto-3
    environment:
      - REPRAM_NODE_ID=auto-node-3
      - NODE_ADDRESS=localhost
      - USE_AUTO_DISCOVERY=true
      - DISCOVERY_DOMAIN=localhost
      - BASE_PORT=8081
      - MAX_PORTS=5
      - REPLICATION_FACTOR=3
    network_mode: host
    volumes:
      - /tmp/repram-auto-3:/tmp/repram
    depends_on:
      - node-1
      - node-2
    command: sh -c "sleep 4 && ./repram-cluster-node"